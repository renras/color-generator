{"version":3,"sources":["ColorList.js","App.js","index.js"],"names":["ColorList","color","index","useState","isClicked","setIsClicked","useEffect","timer","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","hex","style","backgroundColor","console","log","className","undefined","weight","opacity","App","hexColor","setHexColor","colorList","setColorList","isError","setIsError","Values","all","setColor","onSubmit","e","preventDefault","error","type","value","onChange","target","placeholder","border","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAiCeA,EA/BG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1B,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,GAAa,KACZ,KACH,OAAO,kBAAMI,aAAaF,MACzB,CAACH,IAGF,0BACEM,QAAS,WACPC,UAAUC,UAAUC,UAApB,WAAkCZ,EAAMa,MACxCT,GAAa,IAGfU,MAAO,CAAEC,gBAAgB,IAAD,OAAMf,EAAMa,MANtC,UAQGG,QAAQC,IAAIjB,EAAMa,KACnB,mBACEK,UAAWjB,EAAQ,EAAR,mBAA4BkB,EADzC,mBAEKnB,EAAMoB,OAFX,OAGA,mBAAGF,UAAWjB,EAAQ,EAAR,mBAA4BkB,EAA1C,oBAA0DnB,EAAMa,OAChE,mBAAGK,UAAU,YAAYJ,MAAO,CAAEO,QAAQ,GAAD,OAAKlB,EAAY,EAAI,IAA9D,mCARKF,ICmCIqB,MAjDf,WACE,MAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KACA,EAAkCtB,mBAAS,IAA3C,mBAAOuB,EAAP,KAAkBC,EAAlB,KACA,EAA8BxB,oBAAS,GAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAsBA,OARAvB,qBAAU,YACS,WACf,IAAIL,EAAQ,IAAI6B,IAAO,WAAWC,IAAI,IACtCJ,EAAa1B,GAEf+B,KACC,IAGD,iCACE,mCACE,iDACA,uBAAMC,SAxBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIlC,EAAQ,IAAI6B,IAAON,GAAUO,IAAI,IACrCJ,EAAa1B,GACb4B,GAAW,GACX,MAAOO,GACPnB,QAAQC,IAAIkB,GACZP,GAAW,KAgBT,UACE,uBACEQ,KAAK,OACLC,MAAOd,EACPe,SAAU,SAACL,GAAD,OAAOT,EAAYS,EAAEM,OAAOF,QACtCG,YAAY,UACZ1B,MAAO,CAAE2B,OAAQd,GAAW,mBAE9B,wBAAQS,KAAK,SAAb,0BAGJ,yBAASlB,UAAU,YAAnB,SACGO,EAAUiB,KAAI,SAAC1C,EAAOC,GACrB,OAAO,cAAC,EAAD,CAAuBD,MAAOA,EAAOC,MAAOA,GAA5BA,YCzCjC0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.efad86c4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ColorList = ({ color, index }) => {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsClicked(false);\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [isClicked]);\r\n\r\n  return (\r\n    <article\r\n      onClick={() => {\r\n        navigator.clipboard.writeText(`#${color.hex}`);\r\n        setIsClicked(true);\r\n      }}\r\n      key={index}\r\n      style={{ backgroundColor: `#${color.hex}` }}\r\n    >\r\n      {console.log(color.hex)}\r\n      <p\r\n        className={index > 8 ? `color-light` : undefined}\r\n      >{`${color.weight}%`}</p>\r\n      <p className={index > 8 ? `color-light` : undefined}>{`#${color.hex}`}</p>\r\n      <p className=\"clipboard\" style={{ opacity: `${isClicked ? 1 : 0}` }}>\r\n        Copied to Clipboard\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n","import React, { useState, useEffect } from \"react\";\nimport Values from \"values.js\";\nimport ColorList from \"./ColorList\";\n\nfunction App() {\n  const [hexColor, setHexColor] = useState(\"\");\n  const [colorList, setColorList] = useState([]);\n  const [isError, setIsError] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let color = new Values(hexColor).all(10);\n      setColorList(color);\n      setIsError(false);\n    } catch (error) {\n      console.log(error);\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    const setColor = () => {\n      let color = new Values(\"#f15205\").all(10);\n      setColorList(color);\n    };\n    setColor();\n  }, []);\n\n  return (\n    <main>\n      <header>\n        <h1>Color Generator</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={hexColor}\n            onChange={(e) => setHexColor(e.target.value)}\n            placeholder=\"#f15205\"\n            style={{ border: isError && \"1px solid red\" }}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </header>\n      <section className=\"colorList\">\n        {colorList.map((color, index) => {\n          return <ColorList key={index} color={color} index={index} />;\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}